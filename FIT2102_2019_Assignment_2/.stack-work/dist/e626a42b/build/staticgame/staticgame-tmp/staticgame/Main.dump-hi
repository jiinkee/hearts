
==================== FINAL INTERFACE ====================
2019-10-25 08:33:06.6467613 UTC

interface main:Main 8064
  interface hash: df3903f72c5c131c3130d2541eb60ce9
  ABI hash: 707943e9fcfadaaccb13bd8434103b2c
  export-list hash: 8ad112b3bb8059e9aa44185917897d98
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7e31d2cb1100f8aab53ed24908b95761
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
  Main.players
module dependencies: Player
package dependencies: Only-0.1 Win32-2.6.1.0 array-0.5.3.0
                      attoparsec-0.13.2.2 base-4.12.0.0 binary-0.8.6.0
                      bytestring-0.10.8.2 cassava-0.5.1.0 containers-0.6.0.1
                      deepseq-1.4.4.0 directory-1.3.3.0 filepath-1.4.2.1 ghc-prim-0.5.3
                      hashable-1.2.7.0 hearts-0.1.0.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.3 primitive-0.6.4.0 random-1.1
                      scientific-0.3.6.2 text-1.2.3.1 text-short-0.1.2 time-1.8.0.2
                      transformers-0.5.6.2 unordered-containers-0.2.9.0 utility-ht-0.0.14
                      vector-0.12.0.2
orphans: hearts-0.1.0.0:Hearts.Rules hearts-0.1.0.0:Logs
         vector-0.12.0.2:Data.Vector.Unboxed
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         vector-0.12.0.2:Data.Vector.Fusion.Bundle
         transformers-0.5.6.2:Control.Monad.Trans.Error
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: Only-0.1:Data.Tuple.Only
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         text-short-0.1.2:Data.Text.Short.Internal
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         vector-0.12.0.2:Data.Vector vector-0.12.0.2:Data.Vector.Primitive
                         vector-0.12.0.2:Data.Vector.Unboxed
                         vector-0.12.0.2:Data.Vector.Unboxed.Base
import  -/  base-4.12.0.0:Control.Monad be24c6211d7cb61f18d2854428d9a69e
import  -/  base-4.12.0.0:Data.Either fba39a4162b3f7ea70ac8b931cc25c71
import  -/  base-4.12.0.0:Data.Foldable 6673f41a7644ecd4dda455d741d47ef8
import  -/  base-4.12.0.0:GHC.Base 954f4c258d193fab7048a63bfeb56dcf
import  -/  base-4.12.0.0:Prelude aea9afd24db8aed3563d7d850ea453c0
import  -/  base-4.12.0.0:System.IO ef7039badfa76f34317e352d4f124933
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  hearts-0.1.0.0:EitherIO 98810dc896adc4cc136dbb3b59836b29
import  -/  hearts-0.1.0.0:Game aa9fcdbfd23e04e85048d8a66aa183d3
import  -/  hearts-0.1.0.0:Hearts.Play 40b1a68922e705e1978b59147b9ca141
import  -/  hearts-0.1.0.0:Hearts.Types a3e1c55fd9fb4edfd15f0d68a5a3797b
import  -/  hearts-0.1.0.0:Logs 7b7bbc6b95446a7cfe584081b6832c09
import safe Player eb67503852fcd231299598e86df282e6
  exports: 4151d46f06d0487f74c462385d2383fc
  makeBid be1f0c76ae922300747d340dd213cf93
  playCard 85073993829fba80fdb4e25df485ee5e
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
8090360105e68ecd24a7c99db1816374
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d1ed2f3d794d09002a8be1216e11661a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Logs.clearAllLogs2 Main.players s of ds1 { (#,#) ipv ipv1 ->
                 case Hearts.Play.$wplayGame
                        100#
                        Main.players
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   Data.Either.Left e
                   -> (GHC.IO.Handle.Text.hPutStr'
                         GHC.IO.Handle.FD.stdout
                         (Hearts.Types.$fShowGameError_$cshow e)
                         GHC.Types.True)
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ipv2
                   Data.Either.Right gr
                   -> case gr of wild1 { Hearts.Types.GameResult hr scores ds ->
                      let {
                        $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          <join 1> {- Arity: 1, Strictness: <S,U>, Inline: [2] -}
                        = \ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (GHC.IO.Handle.Text.hPutStr'
                                  GHC.IO.Handle.FD.stdout
                                  Main.main2
                                  GHC.Types.True)
                                 `cast`
                               (GHC.Types.N:IO[0] <()>_R)
                                 w of ds3 { (#,#) ipv4 ipv5 ->
                          let {
                            exit :: GHC.Prim.State# GHC.Prim.RealWorld
                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              <join 1> {- Arity: 1, Strictness: <S,U> -}
                            = \ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              Logs.$wwriteGame hr ds eta
                          } in
                          letrec {
                            go :: [Hearts.Types.GameScore]
                                  -> GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              <join 2> {- Arity: 2, Strictness: <S,1*U><S,U> -}
                            = \ (ds4 :: [Hearts.Types.GameScore])
                                (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ds4 of wild2 {
                                [] -> exit eta
                                : y ys
                                -> case (GHC.IO.Handle.Text.hPutStr'
                                           GHC.IO.Handle.FD.stdout
                                           (Hearts.Types.$fShowGameScore_$cshow y)
                                           GHC.Types.True)
                                          `cast`
                                        (GHC.Types.N:IO[0] <()>_R)
                                          eta of ds5 { (#,#) ipv6 ipv7 ->
                                   go ys ipv6 } }
                          } in
                          go scores ipv4 }
                      } in
                      letrec {
                        go :: [Hearts.Types.HandResult]
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          <join 2> {- Arity: 2, Strictness: <S,1*U><S,U> -}
                        = \ (ds3 :: [Hearts.Types.HandResult])
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                          case ds3 of wild2 {
                            [] -> $w$j eta
                            : y ys
                            -> case (GHC.IO.Handle.Text.hPutStr'
                                       GHC.IO.Handle.FD.stdout
                                       (Hearts.Rules.$fShowHandResult_$cshow y)
                                       GHC.Types.True)
                                      `cast`
                                    (GHC.Types.N:IO[0] <()>_R)
                                      eta of ds4 { (#,#) ipv4 ipv5 ->
                               go ys ipv4 } }
                      } in
                      go hr ipv2 } } } }) -}
c621c476ac6f0b238f2fe523a39eb549
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
2b70dff2d14c074166d577fb3da3676e
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=============="#) -}
70bc840b733c2e22b0674c08c5f08683
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3452da3b08e094d6cf581ada448836ce
  players :: [Hearts.Types.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Hearts.Types.Player
                   Main.players13
                   Main.players1) -}
53106af5a87fe122aed5236d3d1d6b8c
  players1 :: [Hearts.Types.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Hearts.Types.Player
                   Main.players10
                   Main.players2) -}
b7b99c996ac1e1131cf20f5d4a8416e3
  players10 :: Hearts.Types.Player
  {- Strictness: m,
     Unfolding: (Hearts.Types.Player
                   Main.players11
                   Player.playCard
                   Game.initElo
                   Game.$fShowPlace7) -}
0ab9039e6dad2dbbb879f452325fa60b
  players11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.players12) -}
ef38645d604372d0f1265c49042e3b47
  players12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3"#) -}
a4e3a2089ab9643e36ca0efbcdbf1ba9
  players13 :: Hearts.Types.Player
  {- Strictness: m,
     Unfolding: (Hearts.Types.Player
                   Main.players14
                   Player.playCard
                   Game.initElo
                   Game.$fShowPlace7) -}
af816b6f2315bd64693db4e659a934a2
  players14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.players15) -}
002c4f9424eb61121d69fd3079c27e36
  players15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("4"#) -}
9f9211223fb19911c5d406df0ff612c4
  players2 :: [Hearts.Types.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Hearts.Types.Player
                   Main.players7
                   Main.players3) -}
6112db9f5e4b59d342eabc98121c3a55
  players3 :: [Hearts.Types.Player]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Hearts.Types.Player
                   Main.players4
                   (GHC.Types.[] @ Hearts.Types.Player)) -}
a8dd7ba6b9fbe25976828738b6438083
  players4 :: Hearts.Types.Player
  {- Strictness: m,
     Unfolding: (Hearts.Types.Player
                   Main.players5
                   Player.playCard
                   Game.initElo
                   Game.$fShowPlace7) -}
eaf0d853261863e53f63c09a91df36ca
  players5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.players6) -}
6f77cde18bec795752cd20cdd0dd0118
  players6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("1"#) -}
b5c530ac7203edbb2ce7bcab4f37d1ae
  players7 :: Hearts.Types.Player
  {- Strictness: m,
     Unfolding: (Hearts.Types.Player
                   Main.players8
                   Player.playCard
                   Game.initElo
                   Game.$fShowPlace7) -}
b28d4c9ce57129273d540953e2a72e34
  players8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.players9) -}
c63666d5fc2c8188e533b64ad4281e89
  players9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("2"#) -}
trusted: trustworthy
require own pkg trusted: True
module header:
  Nothing
declaration docs:
arg docs:

